@if (false) {
<script src="../../Scripts/jquery-1.6.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.mobile-1.0b1.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.tmpl.js" type="text/javascript"></script>
<script src="../../Scripts/dojo.js" type="text/javascript"></script>
<script src="../../Scripts/knockout-1.2.0.js" type="text/javascript"></script>
<script src="../../Scripts/knockout.mapping.js" type="text/javascript"></script>
<script src="../../Scripts/Seznam.js" type="text/javascript"></script>

<link href="../../Content/jquery.mobile-1.0b1.css" rel="stylesheet" type="text/css" />
<link href="../../Content/site.css" rel="stylesheet" type="text/css" />
}


<article data-role="page" id="personal_lists"> 
    <script type="text/javascript">
        $(function () {
            var personalListsViewModel = {
                lists: ko.observableArray(),
                shared: ko.observable(false),
                users: ko.observable(),

                add: function () {
                    $.mobile.changePage(Views.CreateList, { transition: "slideup" });
                },
                listUpdated: function() {
                    this.lists.valueHasMutated();
                    $(Views.PersonalLists + " section[data-role='content'] ul").listview("refresh");
                }
            };

            ko.applyBindings(personalListsViewModel, $(Views.PersonalLists)[0]);

            Util.subscribe(Events.UpdateAllData, function (data) {
                if (data.personalLists)
                    personalListsViewModel.lists(data.personalLists);
            });

            Util.subscribe(Events.ListCreated, this, function (list) {
                personalListsViewModel.listUpdated();
                $.mobile.changePage(Views.PersonalLists, { transition: "slidedown" });
            });
        });
    </script>
    <script id="listTemplate" type="text/html">
        {{each lists}}
        <li><a>${ name }</a> <span class="ui-li-count">${ count }</span></li>
        {{/each}}
    </script>

    <section data-role="header"> 
        <a class="back" href="#main">Home</a>
        <h1>My lists</h1> 
        <a data-role="button" data-bind="click: add">Add</a> 
    </section>

    <section data-role="content">
        <ul data-bind="template: 'listTemplate'" data-role="listview" data-inset="true" data-theme="a">
        </ul>

        <button data-bind="click: add" data-icon="plus" data-iconpos="right">Add</button>
    </section>
</article> 

<article data-role="page" id="create_list">
    <script type="text/javascript">
        $('#create_list').live('pagecreate', function (event) {
            var createListViewModel = {
                name: ko.observable(),
                shared: ko.observable(false),
                users: ko.observable(),

                create: function () {
                    var msg = {
                        name: this.name(),
                        shared: this.shared()
                    };
                    if (this.shared())
                        msg.users = this.users().split(",");
                    Util.publish(Events.CreateList, [msg]);
                },
                update: function () {
                    //$(Views.CreateList).trigger("refresh");
                }
            };
            createListViewModel.allowCreate = ko.dependentObservable(function () {
                return this.name();
            }, createListViewModel);

            ko.bindingHandlers.jQueryButtonEnable = {
                update: function (element, valueAccessor) {
                    ko.bindingHandlers.enable.update(element, valueAccessor);
                    var value = ko.utils.unwrapObservable(valueAccessor());
                    $(element).button(value ? "enable" : "disable");
                }
            };

            // my checkboxes handler
            ko.bindingHandlers.jqmCheck = {
                init: function (element, valueAccessor) {
                    // Get the observable we are bound to
                    var modelValue = valueAccessor();

                    // register handler for changes
                    $(element).click(function () {
                        // update model data
                        if (ko.utils.unwrapObservable(modelValue)) { modelValue(false); }
                        else { modelValue(true); }
                    });
                },
                update: function (element, valueAccessor) {
                    // First get the latest data that we're bound to
                    var value = valueAccessor();

                    // Next, whether or not the supplied model property is observable, get its current value
                    var valueUnwrapped = ko.utils.unwrapObservable(value);

                    // Now manipulate the DOM element to toggle check mark

                    $(element).prop("checked", !valueUnwrapped);
                    //$(element).find("input[type='checkbox']").prop("checked", !valueUnwrapped);
                    if (valueUnwrapped) {

                        //                        $(element).find('.ui-icon').addClass('ui-icon-checkbox-on').removeClass('ui-icon-checkbox-off');
                    }
                    else {
                        //                        $(element).find('.ui-icon').addClass('ui-icon-checkbox-off').removeClass('ui-icon-checkbox-on');
                    }
                }
            };


            ko.applyBindings(createListViewModel, $(Views.CreateList)[0]);



        });
    </script>
    <section data-role="header"> 
        <a href="#main">Home</a>
        <h1>Add list</h1> 
        <a href="#my_lists">Cancel</a> 
    </section>
    <section data-role="content">
        <form>
            <div data-role="fieldcontain">
                <label for="name">List name</label>
                <input type="text" name="name" data-bind="value: name" placeholder="New list"/>
            </div>
            <div data-role="fieldcontain" >
                <div data-bind="jqmCheck: shared"><input type="checkbox" name="checkbox" id="checkbox" class="custom" /></div>
		        <label for="checkbox">Shared</label>
            </div>
            <div data-role="fieldcontain" data-bind="visible: shared">
                <label for="users" title="Comma separated">Users</label>
                <input type="text" name="users" data-bind="value: users" />
            </div>
            <button data-bind="click: create, jQueryButtonEnable: allowCreate">Create</button>
        </form>
    </section>
</article>
